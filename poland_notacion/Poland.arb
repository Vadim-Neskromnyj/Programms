def opz(iStr, stack)
    priority = Hash["(" => 0, "+" => 1, "-" => 1, "*" => 2, "/" => 2, "^" => 3]
    case iStr
      when /^\s*([^\+\-\*\/\(\)\^\s]+)\s*(.*)/ then opz($2, stack) + " " + $1
      when /^\s*([\+\-\*\/\^])\s*(.*)/
        if (stack.empty? or priority[stack.last] < priority[$1]) then opz($2, stack.push($1))
        else stack.pop + " " + opz(iStr, stack) end
      when /^\s*\(\s*(.*)/ then opz($1, stack.push("("))
      when /^\s*\)\s*(.*)/
        if stack.empty? then raise "Error: Excess of closing brackets." 
        elsif priority[head = stack.pop] > 0 then head + " " + opz(iStr, stack)
        else opz($1, stack) end
      elsif stack.empty? then "" 
           elsif priority[stack.last] > 0 then stack.pop + " " + opz(iStr, stack) 
           else raise "Error: Excess of opening brackets." end
    end
  end
  
  while a = gets
    begin
      puts "("+ opz(a, [])+ ")"
    rescue Exception => e
      puts e.message
    end
  end